# Build Spec for AWS CodeBuild CI which will run for every PR.

version: 0.2
env:
  variables:
    ## below enviornment variables are overridden in respective code build.
    # for example for pytorch build run_pytest_pytorch and run_integration_pytest_pytorch will be enabled
    run_pytest_tensorflow2: "enable"
    run_integration_pytest_tensorflow2: "disable"
    # below needs to be enabled
    zero_code_change_test: "enable"
phases:
  install:
    commands:
        -  . config/change_branch.sh
        - su && apt-get update
        - apt-get install sudo -qq -o=Dpkg::Use-Pty=0 # silence output: https://askubuntu.com/a/668859/724247
        - sudo apt-get update -qq -o=Dpkg::Use-Pty=0
        - sudo apt-get install unzip -qq -o=Dpkg::Use-Pty=0
        - cd $CODEBUILD_SRC_DIR  && chmod +x config/protoc_downloader.sh && ./config/protoc_downloader.sh
        - pip install --upgrade pip==19.3.1
        - pip install -q pytest wheel pyYaml pytest-html tensorflow==2.0.1 tensorflow_datasets
        - pip install -q pytest wheel pyYaml pre-commit awscli

  pre_build:
    commands:
      - cd $CODEBUILD_SRC_DIR && pre-commit install && pre-commit run --all-files

  build:
    commands:
      - cd $CODEBUILD_SRC_DIR  && python setup.py bdist_wheel --universal && pip install dist/*.whl && cd ..
      - cd $RULES_CODEBUILD_SRC_DIR && python setup.py bdist_wheel --universal && pip install dist/*.whl && cd ..
      - cd $CODEBUILD_SRC_DIR  && chmod +x config/tests.sh && ./config/tests.sh  && mkdir -p upload/$CURRENT_COMMIT_PATH/wheels && cp ./dist/*.whl upload/$CURRENT_COMMIT_PATH/wheels && cd ..
      - cd $RULES_CODEBUILD_SRC_DIR && chmod +x config/tests.sh && mkdir -p upload/$CURRENT_COMMIT_PATH/wheels && ./config/tests.sh  && cp ./dist/*.whl upload/$CURRENT_COMMIT_PATH/wheels && cd ..

  post_build:
    commands:
      - . $CODEBUILD_SRC_DIR/config/upload_on_end.sh
      - rm -rf $CODEBUILD_SRC_DIR/upload/$CURRENT_COMMIT_PATH
      - rm -rf $RULES_CODEBUILD_SRC_DIR/upload/$CURRENT_COMMIT_PATH
      - if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 0 ]; then echo "ERROR BUILD FAILED " && exit 1 ; fi
      - if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 1 ]; then echo "INFO BUILD SUCCEEDED !!! " ; fi
